---
import MainLayout from '../layouts/MainLayout.astro';
import HeaderEditor from '../components/HeaderEditor';
import SearchBar from '../components/SearchBar.astro';
---

<MainLayout title="Panel de Administración">
    <div class="container mx-auto px-4 py-8">
        <div class="flex justify-between items-center mb-8">
            <div class="flex items-center gap-4">
                <button 
                    id="openUploadModal" 
                    class="py-2 px-4 bg-indigo-700 text-white rounded-md hover:bg-indigo-800 focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 flex items-center gap-2"
                >
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                    </svg>
                    Subir Producto
                </button>
                <button 
                    id="clearStorage" 
                    class="py-2 px-4 bg-red-700 text-white rounded-md hover:bg-red-800 focus:ring-2 focus:ring-red-500 focus:ring-offset-2 flex items-center gap-2"
                >
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                    </svg>
                    Borrar Productos
                </button>
            </div>
            <h1 class="text-3xl font-bold text-gray-900">Panel Administrador</h1>
        </div>

        <!-- Editor del Header -->
        <HeaderEditor client:load />

        <!-- Galería de productos -->
        <div class="max-w-4xl mx-auto">
            <h2 class="text-2xl font-bold text-gray-900 mb-6">Productos Existentes</h2>
            <SearchBar 
                placeholder="Buscar productos" 
                id="adminSearchInput"
                aria-label="Buscar productos"
            />
            <div id="gallery" class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
                <!-- Products will be loaded here -->
            </div>
        </div>

        <!-- Modal de subida de productos -->
        <div id="uploadModal" class="fixed inset-0 bg-gray-900 bg-opacity-50 hidden flex items-center justify-center z-50">
            <div class="bg-white rounded-lg p-6 max-w-xl w-full max-h-[90vh] overflow-y-auto relative">
                <button id="closeModal" class="absolute top-4 right-4 text-gray-700 hover:text-gray-900">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
                
                <h2 class="text-2xl font-bold text-gray-900 mb-6">Subir Nuevo Producto</h2>
                
                <form id="uploadForm" class="space-y-4">
                    <div>
                        <label for="title" class="block text-sm font-medium text-gray-900">Titulo</label>
                        <input
                            type="text"
                            id="title"
                            name="title"
                            required
                            class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                        />
                    </div>
                    
                    <div>
                        <label for="urlUSA" class="block text-sm font-medium text-gray-900">URL Amazon Afiliados USA</label>
                        <input
                            type="url"
                            id="urlUSA"
                            name="urlUSA"
                            required
                            class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                        />
                    </div>
                    
                    <div>
                        <label for="urlMexico" class="block text-sm font-medium text-gray-900">URL Amazon Afiliados Mexico</label>
                        <input
                            type="url"
                            id="urlMexico"
                            name="urlMexico"
                            required
                            class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                        />
                    </div>
                    
                    <div>
                        <label for="image" class="block text-sm font-medium text-gray-900">Imagen</label>
                        <input
                            type="file"
                            id="image"
                            name="image"
                            accept="image/*"
                            required
                            class="mt-1 block w-full"
                        />
                        <img id="imagePreview" class="mt-2 hidden max-w-full h-auto" alt="Vista previa" />
                    </div>
                    
                    <div class="flex justify-end gap-4 mt-6">
                        <button
                            type="button"
                            id="cancelUpload"
                            class="py-2 px-4 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
                        >
                            Cancelar
                        </button>
                        <button
                            type="submit"
                            class="py-2 px-4 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
                        >
                            Guardar
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</MainLayout>

<script>
    import { saveProducts, getProducts, optimizeImageForStorage } from '../utils/productStorage';

    let products = [];
    const modal = document.getElementById('uploadModal');
    const uploadForm = document.getElementById('uploadForm');
    const imageInput = document.getElementById('image');
    const imagePreview = document.getElementById('imagePreview');
    const gallery = document.getElementById('gallery');
    const searchInput = document.getElementById('adminSearchInput');

    // Función para mostrar/ocultar el modal
    function toggleModal(show = true) {
        if (modal) {
            modal.style.display = show ? 'flex' : 'none';
            if (!show && uploadForm) {
                uploadForm.reset();
                if (imagePreview) imagePreview.classList.add('hidden');
            }
        }
    }

    // Función para renderizar productos
    function renderProducts(productsToRender) {
        if (!gallery) return;

        gallery.innerHTML = productsToRender.map((product, index) => `
            <div class="bg-white border rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-shadow">
                <div class="aspect-w-1 aspect-h-1 bg-gray-200">
                    <img 
                        src="${product.image}" 
                        alt="${product.title}"
                        class="w-full h-full object-cover"
                        loading="lazy"
                    >
                </div>
                <div class="p-4">
                    <h3 class="text-sm font-medium text-gray-900 line-clamp-2">${product.title}</h3>
                    <div class="mt-2 flex gap-2">
                        <a 
                            href="${product.urlUSA}" 
                            target="_blank"
                            class="text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded"
                        >
                            USA
                        </a>
                        <a 
                            href="${product.urlMexico}" 
                            target="_blank"
                            class="text-xs bg-green-100 text-green-800 px-2 py-1 rounded"
                        >
                            MX
                        </a>
                    </div>
                    <button 
                        onclick="deleteProduct(${index})"
                        class="mt-2 text-red-600 text-sm hover:text-red-800"
                    >
                        Eliminar
                    </button>
                </div>
            </div>
        `).join('');
    }

    // Función para eliminar un producto
    window.deleteProduct = async function(index) {
        if (!confirm('¿Estás seguro de que deseas eliminar este producto?')) return;
        
        try {
            const updatedProducts = [...products];
            updatedProducts.splice(index, 1);
            await saveProducts(updatedProducts);
            products = updatedProducts;
            renderProducts(products);
        } catch (error) {
            console.error('Error deleting product:', error);
        }
    };

    // Función para cargar productos
    async function loadProducts(searchTerm = '') {
        try {
            products = await getProducts(true); // Forzar actualización
            let filteredProducts = products;
            
            if (searchTerm) {
                const normalizedSearch = searchTerm.toLowerCase();
                filteredProducts = products.filter(product => 
                    product.title.toLowerCase().includes(normalizedSearch)
                );
            }
            
            renderProducts(filteredProducts);
        } catch (error) {
            console.error('Error loading products:', error);
        }
    }

    // Event Listeners
    document.addEventListener('DOMContentLoaded', () => {
        // Cargar productos iniciales
        loadProducts();

        // Manejar apertura del modal
        document.getElementById('openUploadModal')?.addEventListener('click', () => toggleModal(true));

        // Manejar cierre del modal
        document.getElementById('closeModal')?.addEventListener('click', () => toggleModal(false));
        document.getElementById('cancelUpload')?.addEventListener('click', () => toggleModal(false));

        // Manejar vista previa de imagen
        imageInput?.addEventListener('change', async (e) => {
            const file = e.target.files?.[0];
            if (file && imagePreview) {
                const reader = new FileReader();
                reader.onload = async (e) => {
                    const optimizedImage = await optimizeImageForStorage(e.target.result);
                    imagePreview.src = optimizedImage;
                    imagePreview.classList.remove('hidden');
                };
                reader.readAsDataURL(file);
            }
        });

        // Manejar envío del formulario
        uploadForm?.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            try {
                const titleInput = document.getElementById('title');
                const urlUSAInput = document.getElementById('urlUSA');
                const urlMexicoInput = document.getElementById('urlMexico');
                
                if (!titleInput?.value || !urlUSAInput?.value || !urlMexicoInput?.value || !imagePreview?.src) {
                    throw new Error('Por favor completa todos los campos');
                }

                const newProduct = {
                    title: titleInput.value,
                    urlUSA: urlUSAInput.value,
                    urlMexico: urlMexicoInput.value,
                    image: imagePreview.src
                };

                const updatedProducts = [...products, newProduct];
                await saveProducts(updatedProducts);
                products = updatedProducts;
                renderProducts(products);
                toggleModal(false);
            } catch (error) {
                console.error('Error saving product:', error);
            }
        });

        // Manejar búsqueda
        let searchTimeout;
        searchInput?.addEventListener('input', (e) => {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(() => {
                loadProducts(e.target.value);
            }, 300);
        });

        // Manejar borrado de productos
        document.getElementById('clearStorage')?.addEventListener('click', async () => {
            if (!confirm('¿Estás seguro de que deseas borrar todos los productos?')) return;
            
            try {
                await saveProducts([]);
                products = [];
                renderProducts(products);
            } catch (error) {
                console.error('Error clearing products:', error);
            }
        });
    });
</script>

<style>
    .aspect-w-1 {
        position: relative;
        padding-bottom: 100%;
    }
    .aspect-h-1 {
        position: absolute;
        width: 100%;
        height: 100%;
        left: 0;
        top: 0;
    }
</style>
